rules:
  - id: CVE-2023-5217
    metadata:
      author: c0ss4ck9989@gmail.com
      references:
        - https://crbug.com/1486441
      confidence: HIGH
    message: >-
      Heap buffer overflow in vp8 encoding in libvpx in Google Chrome prior to 
      117.0.5938.132 and libvpx 1.13.1 allowed a remote attacker to potentially 
      exploit heap corruption via a crafted HTML page. 
      (Chromium security severity: High)
      commit: 3fbd1dca6a4d2dad332a2110d646e4ffef36d590.
    severity: ERROR
    languages:
      - c
      - cpp
    pattern-either:
      - patterns:
        - pattern: |
            $LW = $CO[$W];
            $LH = $CO[$H];
            ...
            switch ($CASE)
            {
              case 0: ... 
              case 1: ...
              case 2: ...
              case 3: ...
              case 4: ...
              case 5: ...
              default: ...
            }
        - pattern-not-inside: |
            $LW = $CO[$W];
            $LH = $CO[$H];
            ...
            if ($COIW)
              ...
            ...
            switch ($CASE) 
            {
              case 0: ... 
              case 1: ...
              case 2: ...
              case 3: ...
              case 4: ...
              case 5: ...
              default: ...
            }
        - metavariable-comparison:
            metavariable: $W
            comparison: $W > 800
        - metavariable-comparison:
            metavariable: $H
            comparison: $H > 800
      - patterns:
        - pattern: |
            $LW = *($CO + $W);
            $LH = *($CO + $H);
            $PNOL = *($CO + $NOL);
            ...
            switch ($CASE) 
            {
              case 0: ... 
              case 1: ...
              case 2: ...
              case 3: ...
              case 4: ...
              case 5: ...
              default: ...
            }
        - pattern-not-inside: |
            $LW = *($CO + $W);
            $LH = *($CO + $H);
            $PNOL = *($CO + $NOL);
            if (*($CO + $IW))
              ...
            ...
            switch ($CASE) 
            {
              case 0: ... 
              case 1: ...
              case 2: ...
              case 3: ...
              case 4: ...
              case 5: ...
              default: ...
            }
        - metavariable-comparison:
            metavariable: $W
            comparison: $W > 10000
        - metavariable-comparison:
            metavariable: $H
            comparison: $H > 10000
        - metavariable-comparison:
            metavariable: $NOL
            comparison: $NOL > 10000
      - patterns:
        - pattern: |
            $LW = *($CO + $W);
            ...
            $LH = *($CO + $H);
            $PNOL = *($CO + $NOL);
            ...
            switch ($CASE) 
            {
              case 0: ... 
              case 1: ...
              case 2: ...
              case 3: ...
              case 4: ...
              case 5: ...
              default: ...
            }
        - pattern-not-inside: |
            $LW = *($CO + $W);
            ...
            $LH = *($CO + $H);
            $PNOL = *($CO + $NOL);
            if (*($CO + $IW))
              ...
            ...
            switch ($CASE) 
            {
              case 0: ... 
              case 1: ...
              case 2: ...
              case 3: ...
              case 4: ...
              case 5: ...
              default: ...
            }
        - metavariable-comparison:
            metavariable: $W
            comparison: $W > 10000
        - metavariable-comparison:
            metavariable: $H
            comparison: $H > 10000
        - metavariable-comparison:
            metavariable: $NOL
            comparison: $NOL > 10000
